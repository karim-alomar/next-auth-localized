import { GlobalProvider } from "@/context/GlobalContext";
import { LOCALE_KEY } from "@/global";
import type { Metadata } from "next";
import { Cairo, Poppins } from "next/font/google";
import { cookies } from "next/headers";
import "../globals.css";
const cairo = Cairo({
  variable: "--font-cairo",
  subsets: ["latin"],
});

const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: // params,
Readonly<{
  children: React.ReactNode;
  // params: { lang: string };
}>) {
  const lang = (await cookies()).get(LOCALE_KEY)?.value;
  // const { lang } = await params;

  return (
    <html
      lang={lang}
      dir={lang === "ar" ? "rtl" : "ltr"}
      suppressHydrationWarning
    >
      <body
        className={`${
          lang === "ar" ? cairo.className : poppins.className
        } antialiased`}
      >
        <GlobalProvider lang={lang!}>{children}</GlobalProvider>
      </body>
    </html>
  );
}
